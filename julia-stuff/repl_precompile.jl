precompile(Tuple{typeof(JuliaInterpreter.__init__)})
precompile(Tuple{typeof(Revise.__init__)})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Base.PkgId, Revise.PkgData}, Revise.PkgData, Base.PkgId})
precompile(Tuple{typeof(Revise.swap_watch_package), Base.PkgId})
precompile(Tuple{typeof(Revise.watch_package), Base.PkgId})
precompile(Tuple{Revise.TaskThunk})
precompile(Tuple{typeof(Revise.watch_manifest), String})
precompile(Tuple{typeof(FileWatching.watch_file), String, Int64})
precompile(Tuple{typeof(Revise._watch_package), Base.PkgId})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Base.PkgId, Revise.PkgData}, Base.PkgId})
precompile(Tuple{Type{Revise.PkgData}, Base.PkgId})
precompile(Tuple{typeof(Base.sort!), Array{String, 1}, Int64, Int64, Base.Sort.MergeSortAlg, Base.Order.By{Revise.var"#28#29", Base.Order.ReverseOrdering{Base.Order.ForwardOrdering}}, Array{String, 1}})
precompile(Tuple{typeof(Base.push!), Array{Tuple{Module, String, Float64}, 1}, Tuple{Module, String, Float64}})
precompile(Tuple{typeof(Base._deleteat!), Array{Tuple{Module, String, Float64}, 1}, Array{Int64, 1}, Base.Nowhere})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{String, Array{Tuple{Module, String, Float64}, 1}, Array{Base.PkgId, 1}}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{String, Array{Tuple{Module, String, Float64}, 1}, Array{Base.PkgId, 1}}, Int64, Int64})
precompile(Tuple{typeof(Base.setproperty!), Revise.PkgData, Symbol, Array{Base.PkgId, 1}})
precompile(Tuple{typeof(Base.convert), Type{Array{Base.PkgId, 1}}, Array{Base.PkgId, 1}})
precompile(Tuple{Type{OrderedCollections.OrderedDict{Revise.RelocatableExpr, Union{Nothing, Array{Any, 1}}}}})
precompile(Tuple{Type{OrderedCollections.OrderedDict{Module, OrderedCollections.OrderedDict{Revise.RelocatableExpr, Union{Nothing, Array{Any, 1}}}}}})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{Module, OrderedCollections.OrderedDict{Revise.RelocatableExpr, Union{Nothing, Array{Any, 1}}}}, OrderedCollections.OrderedDict{Revise.RelocatableExpr, Union{Nothing, Array{Any, 1}}}, Module})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Base.PkgId, CodeTracking.PkgFiles}, CodeTracking.PkgFiles, Base.PkgId})
precompile(Tuple{typeof(Base.Filesystem.cd), Revise.var"#38#39"{Revise.PkgData}, String})
precompile(Tuple{typeof(fzf_jll.__init__)})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:libc, :compiler_abi), Tuple{Nothing, Pkg.BinaryPlatforms.CompilerABI}}, Type{Pkg.BinaryPlatforms.FreeBSD}, Symbol})
precompile(Tuple{Type{Base.Pair{A, B} where B where A}, Pkg.BinaryPlatforms.FreeBSD, Base.Dict{String, Any}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Pkg.BinaryPlatforms.Platform, Base.Dict{String, Any}}, Base.Dict{String, Any}, Pkg.BinaryPlatforms.FreeBSD})
precompile(Tuple{typeof(JLLWrappers.get_julia_libpaths)})
precompile(Tuple{typeof(OhMyREPL.__init__)})
precompile(Tuple{typeof(Revise.watch_includes), Module, String})
precompile(Tuple{typeof(REPL.Terminals.hascolor), REPL.Terminals.TTYTerminal})
precompile(Tuple{OhMyREPL.var"#1#4", REPL.LineEditREPL})
precompile(Tuple{Type{Base.Dict{Symbol, Any}}, Base.Pair{Symbol, REPL.LineEdit.Prompt}, Vararg{Base.Pair{Symbol, REPL.LineEdit.Prompt}, N} where N})
precompile(Tuple{Type{REPL.REPLHistoryProvider}, Any, Any, Any, Any, Any, Any, Any, Any, Any})
precompile(Tuple{Type{Base.Dict{Any, Any}}, Base.Pair{String, REPL.LineEdit.var"#45#76"}, Vararg{Base.Pair{A, B} where B where A, N} where N})
precompile(Tuple{Type{Base.Dict{Any, Any}}, Base.Pair{String, REPL.LineEdit.var"#74#105"{REPL.LineEdit.HistoryPrompt}}, Vararg{Base.Pair{A, B} where B where A, N} where N})
precompile(Tuple{Type{Base.Dict{Any, Any}}, Base.Pair{Char, REPL.var"#65#74"{REPL.LineEdit.Prompt}}, Vararg{Base.Pair{A, B} where B where A, N} where N})
precompile(Tuple{Type{Base.Dict{Any, Any}}, Base.Pair{String, REPL.LineEdit.var"#251#255"{REPL.LineEdit.PrefixHistoryPrompt}}, Vararg{Base.Pair{A, B} where B where A, N} where N})
precompile(Tuple{Type{Base.Dict{Any, Any}}, Base.Pair{Char, REPL.var"#55#58"{REPL.LineEdit.Prompt}}, Vararg{Base.Pair{A, B} where B where A, N} where N})
precompile(Tuple{typeof(Base.getindex), Array{REPL.LineEdit.TextInterface, 1}, Int64})
precompile(Tuple{typeof(Base.getindex), Type{Base.Dict{Any, Any}}, Base.Dict{Any, Any}, Base.Dict{Char, Any}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Base.Dict{Char, Any}, Char})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Base.Dict{Char, Any}, String})
precompile(Tuple{Type{Base.Pair{String, OhMyREPL.var"#2#5"{REPL.LineEdit.PrefixHistoryPrompt}}}, Any, Any})
precompile(Tuple{Type{Base.Pair{String, OhMyREPL.var"#3#6"{REPL.LineEdit.PrefixHistoryPrompt}}}, Any, Any})
precompile(Tuple{Type{Base.Dict{Any, Any}}, Base.Pair{String, OhMyREPL.var"#2#5"{REPL.LineEdit.PrefixHistoryPrompt}}, Vararg{Base.Pair{A, B} where B where A, N} where N})
precompile(Tuple{typeof(Base.setindex!), Array{Base.Dict{Any, Any}, 1}, Base.Dict{Char, Any}, Int64})
precompile(Tuple{typeof(REPL.run_repl), REPL.AbstractREPL, Any})
precompile(Tuple{typeof(Base.:(==)), REPL.REPLDisplay{R} where R<:REPL.AbstractREPL, REPL.REPLDisplay{R} where R<:REPL.AbstractREPL})
precompile(Tuple{Type{REPL.LineEdit.PromptState}, REPL.Terminals.AbstractTerminal, REPL.LineEdit.Prompt, Base.GenericIOBuffer{Array{UInt8, 1}}, Symbol, Array{Base.GenericIOBuffer{Array{UInt8, 1}}, 1}, Int64, REPL.LineEdit.InputAreaState, Int64, Base.AbstractLock, Float64, Float64})
precompile(Tuple{typeof(REPL.LineEdit.init_state), Any, REPL.LineEdit.HistoryPrompt})
precompile(Tuple{typeof(REPL.LineEdit.init_state), Any, REPL.LineEdit.PrefixHistoryPrompt})
precompile(Tuple{typeof(REPL.LineEdit.refresh_multi_line), REPL.Terminals.UnixTerminal, Any})
precompile(Tuple{typeof(REPL.LineEdit.prompt_string), Function})
precompile(Tuple{typeof(REPL.LineEdit.prompt_string), AbstractString})
precompile(Tuple{REPL.LineEdit.var"#22#23"{OhMyREPL.Prompt.var"#2#28", String}, Any, Any})
precompile(Tuple{OhMyREPL.Prompt.var"#2#28", Any, Any, Any})
precompile(Tuple{Type{Base.IOContext{IO_t} where IO_t<:IO}, Base.GenericIOBuffer{Array{UInt8, 1}}, Base.TTY})
precompile(Tuple{typeof(Base.write), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String})
precompile(Tuple{typeof(Base.getindex), Array{UInt8, 1}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.unsafe_write), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Ptr{UInt8}, UInt64})
precompile(Tuple{typeof(Base.seekstart), Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{Type{Tokenize.Lexers.Lexer{IO_t, T} where T<:Tokenize.Tokens.AbstractToken where IO_t<:IO}, Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{typeof(Base.collect), Tokenize.Lexers.Lexer{Base.GenericIOBuffer{Array{UInt8, 1}}, Tokenize.Tokens.Token}})
precompile(Tuple{OhMyREPL.Passes.SyntaxHighlighter.SyntaxHighlighterSettings, Array{Crayons.Crayon, 1}, Array{Tokenize.Tokens.Token, 1}, Int64})
precompile(Tuple{OhMyREPL.Passes.BracketHighlighter.BracketHighlighterSettings, Array{Crayons.Crayon, 1}, Array{Tokenize.Tokens.Token, 1}, Int64})
precompile(Tuple{OhMyREPL.Passes.RainbowBrackets.RainbowBracketsSettings, Array{Crayons.Crayon, 1}, Array{Tokenize.Tokens.Token, 1}, Int64})
precompile(Tuple{typeof(OhMyREPL.untokenize_with_ANSI), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, OhMyREPL.PassHandler, Array{Tokenize.Tokens.Token, 1}, Int64})
precompile(Tuple{typeof(OhMyREPL.Prompt.refresh_multi_line), Any, Any, Any, Any, Any})
precompile(Tuple{Base.var"#readline##kw", NamedTuple{(:keep,), Tuple{Bool}}, typeof(Base.readline), Base.GenericIOBuffer{Array{UInt8, 1}}})
precompile(Tuple{typeof(Base.print_to_string), Tokenize.Tokens.Kind})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Int64, String, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, UInt8})
precompile(Tuple{typeof(Tokenize.Lexers.lex_whitespace), Tokenize.Lexers.Lexer{Base.GenericIOBuffer{Array{UInt8, 1}}, Tokenize.Tokens.Token}})
precompile(Tuple{REPL.LineEdit.var"#22#23"{OhMyREPL.BracketInserter.var"#6#13"{Array{Char, 1}, Array{Char, 1}}, String}, Any, Any})
precompile(Tuple{OhMyREPL.BracketInserter.var"#6#13"{Array{Char, 1}, Array{Char, 1}}, REPL.LineEdit.MIState, REPL.LineEditREPL, String})
precompile(Tuple{typeof(REPL.LineEdit.edit_backspace), REPL.LineEdit.MIState, Any})
precompile(Tuple{typeof(REPL.LineEdit.deactivate), REPL.LineEdit.TextInterface, REPL.LineEdit.ModeState, Any, REPL.Terminals.TextTerminal})
precompile(Tuple{OhMyREPL.BracketInserter.var"#7#14"{REPL.LineEdit.MIState, REPL.LineEdit.Prompt, Base.GenericIOBuffer{Array{UInt8, 1}}}})
precompile(Tuple{typeof(REPL.LineEdit.refresh_multi_line), REPL.Terminals.TerminalBuffer, REPL.LineEdit.ModeState})
precompile(Tuple{REPL.LineEdit.var"#22#23"{OhMyREPL.BracketInserter.var"#1#8"{Array{Char, 1}, Char, Char}, String}, Any, Any})
precompile(Tuple{OhMyREPL.BracketInserter.var"#1#8"{Array{Char, 1}, Char, Char}, REPL.LineEdit.MIState, REPL.LineEditREPL, Vararg{Any, N} where N})
precompile(Tuple{REPL.LineEdit.var"#22#23"{OhMyREPL.BracketInserter.var"#5#12"{Char}, String}, Any, Any})
precompile(Tuple{OhMyREPL.BracketInserter.var"#5#12"{Char}, REPL.LineEdit.MIState, REPL.LineEditREPL, Vararg{Any, N} where N})
precompile(Tuple{typeof(REPL.LineEdit.edit_splice!), Any, Base.Pair{var"#s828", var"#s827"} where var"#s827"<:Integer where var"#s828"<:Integer, AbstractString})
precompile(Tuple{typeof(Tokenize.Lexers.lex_quote), Tokenize.Lexers.Lexer{Base.GenericIOBuffer{Array{UInt8, 1}}, Tokenize.Tokens.Token}, Bool})
precompile(Tuple{REPL.LineEdit.var"#22#23"{OhMyREPL.BracketInserter.var"#2#9"{Char}, String}, Any, Any})
precompile(Tuple{OhMyREPL.BracketInserter.var"#2#9"{Char}, REPL.LineEdit.MIState, REPL.LineEditREPL, Vararg{Any, N} where N})
precompile(Tuple{REPL.LineEdit.var"#22#23"{OhMyREPL.Prompt.var"#22#48", String}, Any, Any})
precompile(Tuple{OhMyREPL.Prompt.var"#22#48", Any, Any, Any})
precompile(Tuple{typeof(OhMyREPL._check_pass_name), OhMyREPL.PassHandler, String, Bool})
precompile(Tuple{typeof(REPL.LineEdit.state), REPL.LineEdit.MIState, Any})
precompile(Tuple{typeof(Revise.revise_first), Expr})
precompile(Tuple{typeof(Base.isempty), Base.Set{Tuple{Revise.PkgData, String}}})
precompile(Tuple{Type{Base.InterpreterIP}, Nothing, UInt64, Module})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{LoadError, Array{Base.StackTraces.StackFrame, 1}}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{LoadError, Array{Base.StackTraces.StackFrame, 1}}, Int64, Int64})
precompile(Tuple{Base.var"#showerror##kw", NamedTuple{(:backtrace,), Tuple{Bool}}, typeof(Base.showerror), Base.IOContext{REPL.Terminals.TTYTerminal}, LoadError, Array{Base.StackTraces.StackFrame, 1}})
precompile(Tuple{Base.var"#showerror##kw", NamedTuple{(:backtrace,), Tuple{Bool}}, typeof(Base.showerror), Base.IOContext{REPL.Terminals.TTYTerminal}, UndefVarError, Array{Base.StackTraces.StackFrame, 1}})
precompile(Tuple{Base.var"#689#690"{UndefVarError}, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}})
precompile(Tuple{REPL.LineEdit.var"#22#23"{OhMyREPL.var"#2#5"{REPL.LineEdit.PrefixHistoryPrompt}, String}, Any, Any})
precompile(Tuple{OhMyREPL.var"#2#5"{REPL.LineEdit.PrefixHistoryPrompt}, REPL.LineEdit.MIState, REPL.LineEditREPL, Vararg{Any, N} where N})
precompile(Tuple{typeof(REPL.LineEdit.history_prev_prefix), REPL.LineEdit.PrefixSearchState, REPL.REPLHistoryProvider, AbstractString})
precompile(Tuple{typeof(REPL.history_move_prefix), REPL.LineEdit.PrefixSearchState, REPL.REPLHistoryProvider, AbstractString, Bool, Any})
precompile(Tuple{typeof(REPL.LineEdit.buffer), REPL.LineEdit.PrefixSearchState})
precompile(Tuple{REPL.LineEdit.var"#22#23"{REPL.LineEdit.var"#239#247", String}, Any, Any})
precompile(Tuple{typeof(Base.something), REPL.LineEdit.Prompt, REPL.LineEdit.Prompt})
precompile(Tuple{typeof(REPL.LineEdit.match_input), Base.Dict{K, V} where V where K, Any, Any})
precompile(Tuple{REPL.LineEdit.var"#22#23"{REPL.LineEdit.var"#127#180", String}, Any, Any})
precompile(Tuple{REPL.LineEdit.var"#127#180", Any, Any, Vararg{Any, N} where N})
precompile(Tuple{typeof(REPL.LineEdit.edit_move_word_left), Any})
precompile(Tuple{typeof(Base.position), Union{REPL.LineEdit.MIState, REPL.LineEdit.ModeState}})
precompile(Tuple{typeof(REPL.LineEdit.char_move_word_left), Base.GenericIOBuffer{Array{UInt8, 1}}, Any})
precompile(Tuple{typeof(REPL.LineEdit.is_non_word_char), Any})
precompile(Tuple{typeof(REPL.LineEdit.refresh_line), REPL.LineEdit.PromptState})
precompile(Tuple{REPL.LineEdit.var"#22#23"{REPL.LineEdit.var"#112#165", String}, Any, Any})
precompile(Tuple{REPL.LineEdit.var"#112#165", Any, Any, Vararg{Any, N} where N})
precompile(Tuple{REPL.LineEdit.var"##push_kill!#18", Any, typeof(REPL.LineEdit.push_kill!), REPL.LineEdit.MIState, String, Any})
precompile(Tuple{typeof(REPL.LineEdit.refresh_multi_line), REPL.LineEdit.ModeState})
precompile(Tuple{CodeTracking.var"#@code_expr", LineNumberNode, Module, Vararg{Any, N} where N})
precompile(Tuple{typeof(InteractiveUtils.gen_call_with_extracted_types_and_kwargs), Module, Symbol, Tuple{Expr}})
precompile(Tuple{typeof(Base.any), Function, Array{Any, 1}})
precompile(Tuple{Base.var"##any#636", Function, typeof(Base.any), Function, Array{Any, 1}})
precompile(Tuple{typeof(Base._any), InteractiveUtils.var"#35#40", Array{Any, 1}, Base.Colon})
precompile(Tuple{typeof(Base.typesof), String})
precompile(Tuple{typeof(CodeTracking.code_expr), Function, Type{T} where T})
precompile(Tuple{typeof(Revise.get_def), Method})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{String, Revise.WatchList}, String})
precompile(Tuple{Type{Base.Dict{String, Base.PkgId}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{String, Revise.WatchList}, Revise.WatchList, String})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{String, Base.PkgId}, String})
precompile(Tuple{typeof(Base.CoreLogging.shouldlog), Logging.ConsoleLogger, Base.CoreLogging.LogLevel, Module, Symbol, Symbol})
precompile(Tuple{typeof(Base.CoreLogging.handle_message), Logging.ConsoleLogger, Base.CoreLogging.LogLevel, String, Module, Symbol, Symbol, String, Int64})
precompile(Tuple{typeof(Logging.default_metafmt), Base.CoreLogging.LogLevel, Module, Symbol, Symbol, String, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Symbol, String, String}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Symbol, String, String}, Int64, Int64})
precompile(Tuple{typeof(Base.afoldl), typeof(Base.:(+)), Int64, Int64, Int64})
precompile(Tuple{Base.var"#printstyled##kw", NamedTuple{(:bold, :color), Tuple{Bool, Symbol}}, typeof(Base.printstyled), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String})
precompile(Tuple{Base.var"#printstyled##kw", NamedTuple{(:bold, :color), Tuple{Bool, Symbol}}, typeof(Base.printstyled), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, Vararg{String, N} where N})
precompile(Tuple{Base.var"##printstyled#746", Bool, Symbol, typeof(Base.printstyled), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, Vararg{String, N} where N})
precompile(Tuple{Base.var"#with_output_color##kw", NamedTuple{(:bold,), Tuple{Bool}}, typeof(Base.with_output_color), Function, Symbol, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, Vararg{String, N} where N})
precompile(Tuple{Base.var"##with_output_color#745", Bool, typeof(Base.with_output_color), Function, Symbol, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Base.write), Base.TTY, Array{UInt8, 1}})
precompile(Tuple{typeof(Revise.revise_dir_queued), String})
precompile(Tuple{Base.var"##open#287", Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.open), Revise.var"#35#36"{String}, String})
precompile(Tuple{typeof(Base._read_dependency_src), Base.IOStream, String})
precompile(Tuple{typeof(OrderedCollections.ht_keyindex), OrderedCollections.OrderedDict{Module, OrderedCollections.OrderedDict{Revise.RelocatableExpr, Union{Nothing, Array{Any, 1}}}}, Module, Bool})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{Revise.RelocatableExpr, Union{Nothing, Array{Any, 1}}}, Nothing, Revise.RelocatableExpr})
precompile(Tuple{typeof(Base.hash), Bool, UInt64})
precompile(Tuple{typeof(Base.isequal), GlobalRef, GlobalRef})
precompile(Tuple{typeof(Base.hash), String, UInt64})
precompile(Tuple{typeof(Base.isequal), QuoteNode, QuoteNode})
precompile(Tuple{Type{Base.Dict{Union{GlobalRef, Symbol}, Nothing}}})
precompile(Tuple{Type{Base.Dict{Module, Array{Expr, 1}}}})
precompile(Tuple{typeof(Base.copy), Array{Int32, 1}})
precompile(Tuple{typeof(Base._accumulate1!), typeof(Base.add_sum), Array{Int64, 1}, Int64, Array{Int64, 1}, Int64})
precompile(Tuple{Type{Base.Dict{Symbol, Array{Int64, 1}}}})
precompile(Tuple{Type{Base.Dict{Symbol, LoweredCodeUtils.MethodInfo}}})
precompile(Tuple{Type{Base.Dict{Symbol, Union{Nothing, Bool, Symbol}}}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, LoweredCodeUtils.var"#15#18"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, LoweredCodeUtils.var"#16#19"}})
precompile(Tuple{Type{Base.Dict{Union{GlobalRef, Symbol}, LoweredCodeUtils.Links}}})
precompile(Tuple{Type{Base.Dict{Union{GlobalRef, Symbol}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Union{GlobalRef, Symbol}, LoweredCodeUtils.Links}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Union{GlobalRef, Symbol}, LoweredCodeUtils.Links}, LoweredCodeUtils.Links, Symbol})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, LoweredCodeUtils.var"#23#25"}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, LoweredCodeUtils.var"#24#26"}})
precompile(Tuple{Type{Base.Dict{Union{GlobalRef, Symbol}, LoweredCodeUtils.Variable}}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Union{GlobalRef, Symbol}, Array{Int64, 1}}, Symbol})
precompile(Tuple{typeof(Base._append!), Array{Int64, 1}, Base.HasLength, Base.BitSet})
precompile(Tuple{typeof(Base.iterate), Base.KeySet{Union{GlobalRef, Symbol}, Base.Dict{Union{GlobalRef, Symbol}, LoweredCodeUtils.Links}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Union{GlobalRef, Symbol}, Nothing}, Nothing, Symbol})
precompile(Tuple{typeof(Base.iterate), Base.KeySet{Union{GlobalRef, Symbol}, Base.Dict{Union{GlobalRef, Symbol}, LoweredCodeUtils.Links}}, Int64})
precompile(Tuple{typeof(Base.iterate), Base.KeySet{Union{GlobalRef, Symbol}, Base.Dict{Union{GlobalRef, Symbol}, Array{Int64, 1}}}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Union{GlobalRef, Symbol}, LoweredCodeUtils.Variable}, LoweredCodeUtils.Variable, Symbol})
precompile(Tuple{Revise.var"#17#18"{Symbol}, Any})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Bool}, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{Bool, 1}, Bool, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Bool, Bool}, Int64, Int64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Union{GlobalRef, Symbol}, Nothing}, Symbol})
precompile(Tuple{typeof(Base.setindex!), OrderedCollections.OrderedDict{Revise.RelocatableExpr, Union{Nothing, Array{Any, 1}}}, Array{Any, 1}, Revise.RelocatableExpr})
precompile(Tuple{JuliaInterpreter.var"#jumplookup#67", Array{Int64, 1}, Int64})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, Array{Int64, 1}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Array{Int64, 1}}, Array{Int64, 1}, Symbol})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, LoweredCodeUtils.MethodInfo}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Union{GlobalRef, Symbol}, Array{Int64, 1}}, Array{Int64, 1}, Symbol})
precompile(Tuple{typeof(Base.iterate), Base.KeySet{Union{GlobalRef, Symbol}, Base.Dict{Union{GlobalRef, Symbol}, Array{Int64, 1}}}, Int64})
precompile(Tuple{typeof(JuliaInterpreter.is_quotenode), Any, Any})
precompile(Tuple{typeof(Base.:(==)), Function, Function})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Union{GlobalRef, Symbol}, LoweredCodeUtils.Variable}, Symbol})
precompile(Tuple{typeof(Base.filter), Revise.var"#21#22", Array{JuliaInterpreter.BreakpointRef, 1}})
precompile(Tuple{Revise.var"#methods_by_execution!##kw", NamedTuple{(:mode,), Tuple{Symbol}}, typeof(Revise.methods_by_execution!), Function, Revise.CodeTrackingMethodInfo, Base.Dict{Module, Array{Expr, 1}}, JuliaInterpreter.Frame, Array{Bool, 1}})
precompile(Tuple{typeof(Base._any), typeof(JuliaInterpreter.is_vararg_type), Array{Any, 1}, Base.Colon})
precompile(Tuple{JuliaInterpreter.var"#prepare_framecode##kw", NamedTuple{(:enter_generated,), Tuple{Bool}}, typeof(JuliaInterpreter.prepare_framecode), Method, Type{T} where T})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Module, Nothing}, Module})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Method, Nothing}, Method})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Method, JuliaInterpreter.FrameCode}, Method})
precompile(Tuple{typeof(Base.uncompressed_ir), Method})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Method, JuliaInterpreter.FrameCode}, JuliaInterpreter.FrameCode, Method})
precompile(Tuple{Type{JuliaInterpreter.DispatchableMethod}, Nothing, JuliaInterpreter.FrameInstance, Type{T} where T})
precompile(Tuple{typeof(JuliaInterpreter.step_expr!), Any, JuliaInterpreter.Frame, Bool})
precompile(Tuple{LoweredCodeUtils.var"#methoddef!##kw", NamedTuple{(:define,), Tuple{Bool}}, typeof(LoweredCodeUtils.methoddef!), Function, Array{Any, 1}, JuliaInterpreter.Frame, Expr, Int64})
precompile(Tuple{typeof(LoweredCodeUtils.ismethod3), Expr})
precompile(Tuple{Revise.var"#isok#26", LineNumberNode})
precompile(Tuple{typeof(Base.setindex!), Base.IdDict{Type, Union{Base.Missing, Array{Tuple{LineNumberNode, Expr}, 1}}}, Any, Any})
precompile(Tuple{typeof(JuliaInterpreter.get_return_node), Any})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, LoweredCodeUtils.MethodInfo}, LoweredCodeUtils.MethodInfo, Symbol})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Symbol, Union{Nothing, Bool, Symbol}}, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Union{Nothing, Bool, Symbol}}, Symbol, Symbol})
precompile(Tuple{typeof(LoweredCodeUtils.set_to_running_name!), Any, Base.Dict{Symbol, Symbol}, JuliaInterpreter.Frame, Base.Dict{Symbol, LoweredCodeUtils.MethodInfo}, LoweredCodeUtils.SelfCall, Base.Dict{Symbol, Union{Nothing, Bool, Symbol}}, Symbol, Symbol})
precompile(Tuple{typeof(LoweredCodeUtils.replacename!), Expr, Base.Pair{Symbol, Symbol}})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Union{GlobalRef, Symbol}, LoweredCodeUtils.Links}, GlobalRef})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Union{GlobalRef, Symbol}, LoweredCodeUtils.Links}, LoweredCodeUtils.Links, GlobalRef})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Union{GlobalRef, Symbol}, Nothing}, Nothing, GlobalRef})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Union{GlobalRef, Symbol}, Array{Int64, 1}}, GlobalRef})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Union{GlobalRef, Symbol}, LoweredCodeUtils.Variable}, LoweredCodeUtils.Variable, GlobalRef})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Union{GlobalRef, Symbol}, Nothing}, GlobalRef})
precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Union{GlobalRef, Symbol}, LoweredCodeUtils.Variable}, GlobalRef})
precompile(Tuple{typeof(Base.get), Base.Dict{Any, Any}, Tuple{QuoteNode, DataType, Core.SimpleVector, Module, Int64}, Nothing})
precompile(Tuple{typeof(JuliaInterpreter.parametric_type_to_expr), Type})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Any, Any}, Function, Tuple{QuoteNode, DataType, Core.SimpleVector, Module, Int64}})
precompile(Tuple{typeof(Base.parentmodule), Function})
precompile(Tuple{typeof(Base.parentmodule), DataType})
precompile(Tuple{typeof(Base.invokelatest), Any, Any})
precompile(Tuple{JuliaInterpreter.CompiledCalls.var"###compiledcall#253", Type{T} where T})
precompile(Tuple{typeof(Base.map), JuliaInterpreter.var"#70#71", Core.SimpleVector})
precompile(Tuple{typeof(Base.unique!), Array{Int64, 1}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Int64, 1}, Int64, Base.Generator{Array{Int64, 1}, JuliaInterpreter.var"#68#69"{Array{Int64, 1}}}, Int64})
precompile(Tuple{typeof(Base._deleteat!), Array{Int32, 1}, Array{Int64, 1}, Base.Nowhere})
precompile(Tuple{typeof(Base._deleteat!), Array{Any, 1}, Array{Int64, 1}, Base.Nowhere})
precompile(Tuple{typeof(Base.invokelatest), Any, Any, Vararg{Any, N} where N})
precompile(Tuple{Base.var"##invokelatest#1", Base.Iterators.Pairs{Union{}, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.invokelatest), Any, Any, Vararg{Any, N} where N})
precompile(Tuple{JuliaInterpreter.CompiledCalls.var"###compiledcall#254", Type{T} where T, Int64, Base.Val{String}})
precompile(Tuple{typeof(JuliaInterpreter.append_any), Any})
precompile(Tuple{typeof(Base._append!), Array{Any, 1}, Base.HasLength, Core.SimpleVector})
precompile(Tuple{JuliaInterpreter.CompiledCalls.var"###compiledcall#255", String})
precompile(Tuple{JuliaInterpreter.CompiledCalls.var"###compiledcall#256", Ptr{UInt8}, Int64})
precompile(Tuple{typeof(Base.put!), Base.Channel{Any}, Tuple{Expr, Bool}})
precompile(Tuple{typeof(Base.Multimedia.display), REPL.REPLDisplay{R} where R<:REPL.AbstractREPL, Any})
precompile(Tuple{typeof(Base.Multimedia.display), REPL.REPLDisplay{REPL.LineEditREPL}, Base.Multimedia.MIME{Symbol("text/plain")}, Expr})
precompile(Tuple{typeof(Base.write), REPL.Terminals.TTYTerminal, String, String})
precompile(Tuple{Type{Base.IOContext{IO_t} where IO_t<:IO}, REPL.Terminals.TTYTerminal, Base.Pair{Symbol, Bool}})
precompile(Tuple{typeof(Base.show), Base.IOContext{REPL.Terminals.TTYTerminal}, Base.Multimedia.MIME{Symbol("text/plain")}, Expr})
precompile(Tuple{typeof(Base.show_unquoted_quote_expr), Base.IOContext{REPL.Terminals.TTYTerminal}, Any, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.show_block), Base.IOContext{REPL.Terminals.TTYTerminal}, Symbol, Expr, Expr, Int64, Int64})
precompile(Tuple{typeof(Base.show_call), Base.IOContext{REPL.Terminals.TTYTerminal}, Symbol, Symbol, Array{Any, 1}, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.print), Base.IOContext{REPL.Terminals.TTYTerminal}, LineNumberNode, Char})
precompile(Tuple{typeof(Base.print), Base.IOContext{REPL.Terminals.TTYTerminal}, String, Symbol, Vararg{Any, N} where N})
precompile(Tuple{typeof(Base.print), Base.IOContext{REPL.Terminals.TTYTerminal}, Symbol})
precompile(Tuple{typeof(Base.allow_macroname), Symbol})
precompile(Tuple{typeof(Base.show_call), Base.IOContext{REPL.Terminals.TTYTerminal}, Symbol, Expr, Array{Any, 1}, Int64, Int64, Bool})
precompile(Tuple{typeof(Base.show_unquoted), Base.IOContext{REPL.Terminals.TTYTerminal}, Symbol, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.show_unquoted), Base.IOContext{REPL.Terminals.TTYTerminal}, LineNumberNode, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.in), Symbol, Tuple{Symbol, Symbol, Symbol}})
precompile(Tuple{typeof(Base.show_unquoted), Base.IOContext{REPL.Terminals.TTYTerminal}, Int64, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.show_block), Base.IOContext{REPL.Terminals.TTYTerminal}, String, Symbol, Expr, Int64, Int64})
precompile(Tuple{REPL.LineEdit.var"#22#23"{OhMyREPL.Prompt.var"#21#47", String}, Any, Any})
precompile(Tuple{OhMyREPL.Prompt.var"#21#47", Any, Any, Any})
precompile(Tuple{typeof(REPL.LineEdit.edit_abort), Any, Bool})
precompile(Tuple{REPL.LineEdit.var"##edit_abort#108", Any, typeof(REPL.LineEdit.edit_abort), Any, Bool})
precompile(Tuple{typeof(Base.put!), Base.Channel{Any}, Tuple{Nothing, Int64}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Nothing, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Nothing, Int64}, Int64, Int64})
precompile(Tuple{typeof(FileWatching.uvfinalize), FileWatching.FileMonitor})
precompile(Tuple{REPL.var"#63#72"{Base.IOStream}, Any})
